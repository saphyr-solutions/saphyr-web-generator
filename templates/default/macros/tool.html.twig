{% macro buildSection(current_section) %}
    {% if current_section.values.shape_top.value %}
        <div class="position-relative">
            <div class="shape shape-top shape-fluid-x" style="color:{{ current_section.values.shape_top_color.value ?: "#fff" }};">
                {% if current_section.values.shape_top.value == "rounded" %}
                    <svg viewBox="0 0 2880 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2880 0H0V48H720c717.5-52 1440 0 1440 0h720V0Z" fill="currentColor"></path></svg>

                {% elseif current_section.values.shape_top.value == "diagonal-up-2deg" %}
                    <svg viewBox="0 0 2880 98.11" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2160,49.05L720,98.11H0V0H2880V49.05h-720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_top.value == "diagonal-up-5deg" %}
                    <svg viewBox="0 0 2880 250" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2160,125L720,250H0V0H2880V125h-720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_top.value == "diagonal-up-10deg" %}
                    <svg viewBox="0 0 2880 508.97" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2160,254.49L720,508.97H0V0H2880V254.49h-720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_top.value == "diagonal-down-2deg" %}
                    <svg viewBox="0 0 2880 98.11" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0,49.05V0H2880V98.11h-720L720,49.05H0Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_top.value == "diagonal-down-5deg" %}
                    <svg viewBox="0 0 2880 250" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0,125V0H2880V250h-720L720,125H0Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_top.value == "diagonal-down-10deg" %}
                    <svg viewBox="0 0 2880 508.97" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0,254.49V0H2880V508.97h-720L720,254.49H0Z" fill="currentColor"></path></svg>
                {% endif %}
            </div>
        </div>
    {% endif %}

    <div class="s_{{ current_section.unique }}" style="{{ _self.getStyles(current_section, "")|trim }}" {% if current_section.values.id.label %}id="{{ current_section.values.id.label }}"{% endif %}>
        <div {{ _self.getEditableSection(current_section) }} class="{% for class in current_section.values.classes %}{{ class.value }} {% endfor %}">
            {% set rowClass = '' %}
            {% if current_section.values.bloc_align %}
                {% for class in current_section.values.bloc_align %}
                    {% set rowClass = rowClass ~ " " ~ class.value %}
                {% endfor %}
            {% endif %}

            <div class="row gy-5 rs_{{ current_section.unique }} {{ rowClass }}">
                {% set columns = current_section.values.columns.value %}
                {% if columns == "col-3_col-3_col-3_col-3" %}
                    {% set columns = "col-sm-6 col-lg-3_col-sm-6 col-lg-3_col-sm-6 col-lg-3_col-md-3" %}
                {% elseif columns == "col-4_col-4_col-4" %}
                    {% set columns = "col-sm-6 col-lg-4_col-sm-6 col-lg-4_col-sm-6 col-lg-4" %}
                {% else %}
                    {% set columns = columns|replace({"col-": "col-md-"}) %}
                {% endif %}
                {% set columnsClasses = columns|split("_") %}
                {% set totalColumns = columnsClasses|length %}

                {% set columnIndex = 0 %}
                {% for current_bloc in current_section.blocs %}
                    {% set inSameColumn = current_bloc.values.same_column[0].value %}

                    {% if loop.first %}
                        <div class="{{ columnsClasses[0] }}">
                    {% elseif inSameColumn %}
                        {# Nothing #}
                    {% else %}
                        {% set columnIndex = columnIndex+1 %}
                        </div>
                        <div class="{{ columnsClasses[columnIndex % totalColumns] }}">
                    {% endif %}

                    {{ include('blocs/' ~ current_bloc.values.type.value ~ '.html.twig', {current_bloc: current_bloc,current_section:current_section}, with_context = true) }}

                    {% if loop.last %}
                        </div>
                    {% endif %}
                {% endfor %}

            </div>
        </div>
    </div>

    {% if current_section.values.shape_bottom.value %}
        <div class="position-relative">
            <div class="shape shape-bottom shape-fluid-x" style="color:{{ current_section.values.shape_bottom_color.value ?: "#fff" }};">
                {% if current_section.values.shape_bottom.value == "rounded" %}
                    <svg viewBox="0 0 2880 48" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0 48h2880V0h-720C1442.5 52 720 0 720 0H0v48z" fill="currentColor"></path></svg>

                {% elseif current_section.values.shape_bottom.value == "diagonal-up-2deg" %}
                    <svg viewBox="0 0 2880 98.11" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M720,49.06L2160,0h720V98.11H0V49.06H720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_bottom.value == "diagonal-up-5deg" %}
                    <svg viewBox="0 0 2880 250" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M720,125L2160,0h720V250H0V125H720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_bottom.value == "diagonal-up-10deg" %}
                    <svg viewBox="0 0 2880 508.97" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M720,254.49L2160,0h720V508.97H0V254.49H720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_bottom.value == "diagonal-down-2deg" %}
                    <svg viewBox="0 0 2880 98.11" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2880,49.06v49.05H0V0H720l1440,49.06h720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_bottom.value == "diagonal-down-5deg" %}
                    <svg viewBox="0 0 2880 250" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2880,125v125H0V0H720l1440,125h720Z" fill="currentColor"></path></svg>
                {% elseif current_section.values.shape_bottom.value == "diagonal-down-10deg" %}
                    <svg viewBox="0 0 2880 508.97" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2880,254.49v254.49H0V0H720l1440,254.49h720Z" fill="currentColor"></path></svg>
                {% endif %}
            </div>
        </div>
    {% endif %}
{% endmacro %}

{% macro getStyles(element, prefix) %}
    {% set styles = [] %}
    {% if attribute(element.values, prefix ~ "color").value %}
        {% set styles = styles|merge(["color: " ~ attribute(element.values, prefix ~ "color").value]) %}
    {% endif %}

    {# Background #}
    {% set backgrounds = [] %}
    {% if attribute(element.values, prefix ~ "background_image").value %}
        {% if attribute(element.values, prefix ~ "background_color").value and attribute(element.values, prefix ~ "background_color_alt").value %}
            {% set backgrounds = backgrounds|merge(["linear-gradient(135deg, "~attribute(element.values, prefix ~ "background_color").value~" 0%, "~attribute(element.values, prefix ~ "background_color_alt").value~" 100%)"]) %}
        {% elseif attribute(element.values, prefix ~ "background_color").value %}
            {% set backgrounds = backgrounds|merge(["linear-gradient(135deg, "~attribute(element.values, prefix ~ "background_color").value~" 0%, "~attribute(element.values, prefix ~ "background_color").value~" 100%)"]) %}
        {% elseif attribute(element.values, prefix ~ "background_color_alt").value %}
            {% set backgrounds = backgrounds|merge(["linear-gradient(135deg, "~attribute(element.values, prefix ~ "background_color_alt").value~" 0%, "~attribute(element.values, prefix ~ "background_color_alt").value~" 100%)"]) %}
        {% endif %}
        {% set backgrounds = backgrounds|merge(["url("~asset(attribute(element.values, prefix ~ "background_image"))~") center center no-repeat"]) %}
    {% elseif attribute(element.values, prefix ~ "background_color").value and attribute(element.values, prefix ~ "background_color_alt").value %}
        {% set backgrounds = backgrounds|merge(["linear-gradient(135deg, "~attribute(element.values, prefix ~ "background_color").value~" 0%, "~attribute(element.values, prefix ~ "background_color_alt").value~" 100%)"]) %}
    {% elseif attribute(element.values, prefix ~ "background_color").value %}
        {% set backgrounds = backgrounds|merge([attribute(element.values, prefix ~ "background_color").value]) %}
    {% elseif attribute(element.values, prefix ~ "background_color_alt").value %}
        {% set backgrounds = backgrounds|merge([attribute(element.values, prefix ~ "background_color_alt").value]) %}
    {% endif %}

    {% if backgrounds %}
        {% set styles = styles|merge(["background:" ~ backgrounds|join(", ") ~ "", "background-repeat: no-repeat", "background-size: cover"]) %}
    {% endif %}

    {% set stylesString = styles|join("!important; ") %}
    {% set stylesString = stylesString|trim %}
    {% if stylesString|length > 0 %}
        {% set stylesString = stylesString ~ "!important" %}
    {% endif %}
    {{ stylesString }}
{% endmacro %}

{% macro img(current_bloc,classes="",html="",params="",maxwidth="") %}
    {% if current_bloc.values.image_link.value %}<a target="_blank" href="{{ current_bloc.values.image_link.value }}">{% endif %}
    <img class="{{ classes }}" {% if current_bloc.values.image_max_width.value  %}style="max-width:{{ current_bloc.values.image_max_width.value }}px"{% endif %} src="{{ asset(current_bloc.values.image,params) }}" {{ html }} alt=" {{ current_bloc.values.image.label }}">
    {% if current_bloc.values.image_link.value %}</a>{% endif %}
{% endmacro %}

{% macro img2(current_bloc,classes="",html="",params="",maxwidth="") %}
    {% if current_bloc.values.image2_link.value %}<a target="_blank" href="{{ current_bloc.values.image2_link.value }}">{% endif %}
    <img class="{{ classes }}" {% if current_bloc.values.image2_max_width.value  %}style="max-width:{{ current_bloc.values.image2_max_width.value }}px"{% endif %} src="{{ asset(current_bloc.values.image2,params) }}" {{ html }} alt=" {{ current_bloc.values.image2.label }}">
    {% if current_bloc.values.image_link.value %}</a>{% endif %}
{% endmacro %}

{% macro header(current_bloc, level = "1",classes="",html="",addClasses="0",allowEditor="0") %}
    {% set html_header = current_bloc.values.taille_du_titre.value ? current_bloc.values.taille_du_titre.value : 'h' ~ level %}
    <{{ html_header }} {% if allowEditor == "editable" %}{{ _self.getEditableBloc(current_bloc,"left") }}{% endif %} class="{% if addClasses %}{% for class in current_bloc.values.classes %}{{ class.value }} {% endfor %}{% endif%} {{ classes }} " style="{{ _self.getStyles(current_bloc, "title_")|trim }}" {{ html }}>{{ current_bloc.values.title.value|snl2br|raw }}</{{ html_header }}>
{% endmacro %}

{% macro button(current_bloc, classes="",html="") %}
    <div class="{{ current_bloc.values.button_align.value }}">
        <a {% if current_bloc.values.button_link.value %}href="{{ current_bloc.values.button_link.value }}"{% endif %} target="{{ current_bloc.values.button_target.value ?: "_self" }}" style="{{ _self.getStyles(current_bloc, "button_")|trim }}" class="mt-5 btn {% for class in current_bloc.values.button_classes %}{{ class.value }} {% endfor %} {{ classes }}{% if current_bloc.values.button_custom_classes.value %} {{ current_bloc.values.button_custom_classes.value }}{% endif %}" {{ html }}>
            {% if current_bloc.values.button_logo.value %}
                <img src="{{ asset(current_bloc.values.button_logo.value) }}" class="me-2">
            {% elseif current_bloc.values.button_icon.value %}
                <i class="{{ current_bloc.values.button_icon.value }} fa-fw me-2"></i>
            {% endif %}
            {{ current_bloc.values.button_text.value }}
        </a>
    </div>
{% endmacro %}

{% macro icon(current_bloc, classes="",html="") %}
    <div class="{% for class in current_bloc.values.icon_classes %}{{ class.value }} {% endfor %} {{ classes }}">
        {% set elementAttr = 'class="icon-circle bg-primary text-white" style="'~_self.getStyles(current_bloc, "icon_")|trim~'"' %}
        {% set elementIcon = '<i class="'~current_bloc.values.icon_icon.value~' fa-lg"></i>' %}

        {% if current_bloc.values.icon_logo.value %}
            {% set elementIcon = '<img src="'~asset(current_bloc.values.icon_logo)~'" style="width:2.5rem; height:2.5rem; object-fit:contain;">' %}
            {% set elementAttr = 'class="icon-circle text-white" style="'~_self.getStyles(current_bloc, "icon_")|trim~'"' %}
        {% endif %}

        {% if current_bloc.values.icon_link.value %}
            <a href="{{ current_bloc.values.icon_link.value }}" target="{{ current_bloc.values.icon_target.value }}" {{ elementAttr|raw }}>{{ elementIcon|raw }}</a>
        {% else %}
            <span {{ elementAttr|raw }}>{{ elementIcon|raw }}</span>
        {% endif %}
    </div>
{% endmacro %}

{% macro label(current_bloc, number, classes="",html="") %}
  <span class="badge rounded-pill" style="{{ _self.getStyles(current_bloc, "label_"~number~"_")|trim }}">
      {% if attribute(current_bloc.values,"label_"~number~"_link").value %}
          <a class="h6" href="{{ attribute(current_bloc.values,"label_"~number~"_link").value }}" target="{{ attribute(current_bloc.values,"label_"~number~"_target").Value }}" style="color: inherit;">{{ attribute(current_bloc.values,"label_"~number~"_label").value }}</a>
      {% else %}
          <span class="h6">{{ attribute(current_bloc.values,"label_"~number~"_label").value }}</span>
      {% endif %}
  </span>
{% endmacro %}

{% macro files(current_bloc, classes="",html="") %}
    <ul class="list-unstyled py-5 mt-5 border-top {{ classes }}" {{ html }}>
        {% for file in current_bloc.values.files %}
            {% if file.extension == "jpg" or file.extension == "jpeg" or file.extension == "png" or file.extension == "gif" %}
                {% set icon = "fa-file-image" %}
            {% elseif file.extension == "pdf" %}
                {% set icon = "fa-file-pdf" %}
            {% elseif file.extension == "doc" or file.extension == "docx" %}
                {% set icon = "fa-file-word" %}
            {% elseif file.extension == "xls" or file.extension == "xlsx" or file.extension == "csv" %}
                {% set icon = "fa-file-excel" %}
            {% else %}
                {% set icon = "fa-file" %}
            {% endif %}
            <li><a href="{{ asset(file) }}" target="_blank"><i class="fad {{ icon }} fa-fw fa-lg"></i> {{ file.label }}</a></li>
        {% endfor %}
    </ul>
{% endmacro %}


{% macro getBlocClasses(current_bloc) %}
{% for class in current_bloc.values.classes %}{{ class.value }} {% endfor %}{% if current_bloc.values.css_addons.value %} {{ current_bloc.values.css_addons.value  }}{% endif %}
{% endmacro %}

{% macro getEditMode(current_page,config) %}
    {% if  _session.isEditMode %}
        <link href="{{ asset('assets/backend/editor.css') }}" rel="stylesheet">
        <script type="text/javascript">
            var editor = {
                client: "{{ config.api_client }}",
                api_domain: "{{ config.api_domain }}",
                slug: '{{ current_page.editor.slug }}',
                id: '{{ current_page.editor.id }}',
                section: '{{ current_page.editor.section }}',
                edited: '{{ current_page.unique }}'
            };
        </script>
        <script defer src="{{ asset('assets/backend/editor.js') }}"></script>
    {% endif %}
{% endmacro %}

{% macro getEditableSection(current_section) %}
    {% if  _session.isEditMode %}
        data-editor='{"form":"{{ current_section.module.add }}", "module_slug":"{{ current_section.module.slug }}", "module_id":"{{ current_section.module.id }}", "id":"{{ current_section.unique }}"}'
    {% endif %}
{% endmacro %}

{% macro getEditableBloc(current_bloc,position="right") %}
    {% if  _session.isEditMode %}
        data-editor-position="{{ position }}" data-editor='{"module_slug":"{{ current_bloc.module.slug }}", "module_id":"{{ current_bloc.module.id }}", "id":"{{ current_bloc.unique }}"}'
    {% endif %}
{% endmacro %}

{% macro getEditable(module,current_bloc) %}
    {% if  _session.isEditMode %}
        data-editor='{"module_slug":"{{ module.slug }}", "module_id":"{{ module.id }}", "id":"{{ current_bloc.unique }}"}'
    {% endif %}
{% endmacro %}